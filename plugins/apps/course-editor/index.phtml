<h1>Course Editor</h1>


<style>
.sections {
}
.section {
	padding: 10px;
	margin: 15px;
	border-top: 1px solid black;
}
.lessons {
	margin: 15px;
	padding: 10px;
}
.lesson {
	background-color: #DEDEDE;
	margin: 15px;
	padding: 10px;
}
.sections-title {
}
.section-title {
	font-size: 1.3em;
	font-weight: bold;
}
.lessons-title {
}
.lesson-title {
	font-size: 1.3em;
	font-weight: bold;
}


</style>
<script>
/**
 * switch position of items in array
 * http://stackoverflow.com/a/5306832
 */
Array.prototype.move = function (old_index, new_index) {
    if (new_index >= this.length) {
        var k = new_index - this.length;
        while ((k--) + 1) {
            this.push(undefined);
        }
    }
    this.splice(new_index, 0, this.splice(old_index, 1)[0]);
    return this; // for testing purposes
};

function drawEditor(element, course) {
	element.html('')
	var html
	element.append('<div class="sections-title">'+course.numLessons+' Lessons in '+course.numSections+' Sections</div>')

	html = '<div class="sections">'
	// loop sections
	$.each(course.sections, function(k, section) {
		html += '<div class="section">'

				html += '<div class="row">'

		html += '<div class="col-md-4">'
		html += '<div class="section-title">'+section.title+'</div>'
		html += '<div class="section-description">'+section.descriptionHtml+'</div>'
		html += '<div class="lessons-title">'+section.numLessons+' Lessons</div>'
		html += '</div>'
		
		// controls
		html += '<div class="controls btn-group col-md-2">'
		html += '<button class="btn edit-section" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Edit Section"><span data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>'
		html += '<button class="btn up-section" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Move up Section"><span data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-arrow-up" aria-hidden="true"></span></button>'
		html += '<button class="btn down-section" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Move down Section"><span data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-arrow-down" aria-hidden="true"></span></button>'
		html += '<button class="btn btn-danger delete-section" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Danger Zone: Delete Section"><span data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>'
		html += '</div>'

				html += '</div>' // row

		html += '<div class="lessons">'
		
		$.each(section.lessons, function(k, lesson) {
			html += '<div class="row lesson">'
			
			html += '<div class="col-md-1">'
			if (lesson.imageName === null) {
			} else {
				html += '<img src="'+lesson.urls.images.list+'" alt="'+lesson.title+'" title="'+lesson.title+'"/>'
			}
			html += '</div>' // img-lesson
			
			html += '<div class="col-md-4">'
			html += '<div class="lesson-title">'+lesson.title+'</div>'
			html += '<div class="lesson-description">'+lesson.descriptionHtml+'</div>'
			html += '<div class="lesson-content">'
			if (lesson.content === null) {
				html += '<a href="">Assign Content</a>'
			} else {
				html += '<a href="">'+lesson.content.name+'</a>'
			}
			html += '</div>' // lesson-content

			html += '</div>' // col

			html += '<div class="controls btn-group col-md-2">'
			html += '<button class="btn edit-lesson" data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Edit Lesson"><span data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>'
			html += '<button class="btn up-lesson" data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Move up Lesson"><span data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-arrow-up" aria-hidden="true"></span></button>'
			html += '<button class="btn down-lesson" data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Move down Lesson"><span data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-arrow-down" aria-hidden="true"></span></button>'
			html += '<button class="btn btn-danger delete-lesson" data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" data-toggle="tooltip" title="Danger Zone: Delete Lesson"><span data-lessonid="'+lesson.lessonId+'" data-sectionid="'+section.sectionId+'" class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>'
			html += '</div>'


			html += '</div>' // row+lesson
		})

		// add new lesson
		html += '<div class="lesson"><div class="lesson-title">New Lesson: <input type="text" id="newlesson" placeholder="Lesson Title"/><button class="btn addLesson" data-sectionid="'+section.sectionId+'">Add</span></button></div></div>'
		html += '</div>' // lessons


		html += '</div>' // section
	})

	// add new section
	html += '<div class="section"><div class="section-title">New Section: <input type="text" id="newsection" placeholder="Section Title"/><button class="btn" id="addsection">Add</button></div></div>'
			
	html += '</div>' // sections
	element.append(html)

	// activate tooltips
	$('[data-toggle="tooltip"]').tooltip()

	// handle edit section
	$('.edit-section').click(function(event) {
		var sectionId = event.target.dataset.sectionid
		$('#sectionId').val(sectionId)

		var position = course.sections.findIndex(x => x.sectionId == sectionId)
		$('#sectionTitle').val(course.sections[position].title)
		$('#sectionDescription').val(course.sections[position].description)
		
		$('#modalEditSection').modal()
	})

	// handle move down lesson
	$('.down-lesson').click(function(event) {
		var lessonId = event.target.dataset.lessonid
		var sectionId = event.target.dataset.sectionid
		
		var p = course.sections.findIndex(x => x.sectionId == sectionId)
		var section = course.sections[p]

		var position = section.lessons.findIndex(x => x.lessonId == lessonId)
		
		if (position < section.lessons.length-1) {
			
			var targetId = section.lessons[position+1].lessonId
			$.post( "<?= $settings['api']; ?>lessons/switch",
				JSON.stringify({ sourceId: lessonId, targetId: targetId }),
				function(result) {
				var apiResult = JSON.parse(result);
				toastApiResult(apiResult)
				if (apiResult.message.type == 1) {
					section.lessons.move(position, position+1)
					drawEditor(element, course)
				}
			}).fail(function(result) {
				toastAjaxResult(result)
			})
		}
	})

	// handle move up lesson
	$('.up-lesson').click(function(event) {
		var lessonId = event.target.dataset.lessonid
		var sectionId = event.target.dataset.sectionid
		
		var p = course.sections.findIndex(x => x.sectionId == sectionId)
		var section = course.sections[p]

		var position = section.lessons.findIndex(x => x.lessonId == lessonId)
		
		if (position > 0) {
			
			var targetId = section.lessons[position-1].lessonId
			$.post( "<?= $settings['api']; ?>lessons/switch",
				JSON.stringify({ sourceId: lessonId, targetId: targetId }),
				function(result) {
				var apiResult = JSON.parse(result);
				toastApiResult(apiResult)
				if (apiResult.message.type == 1) {
					section.lessons.move(position, position-1)
					drawEditor(element, course)
				}
			}).fail(function(result) {
				toastAjaxResult(result)
			})
		}
	})
	
	// handle move down section
	$('.down-section').click(function(event) {
		var sectionId = event.target.dataset.sectionid		
		var position = course.sections.findIndex(x => x.sectionId == sectionId)
		if (position < course.sections.length-1) {
			
			var targetId = course.sections[position+1].sectionId
			$.post( "<?= $settings['api']; ?>sections/switch",
				JSON.stringify({ sourceId: sectionId, targetId: targetId }),
				function(result) {
				var apiResult = JSON.parse(result);
				toastApiResult(apiResult)
				if (apiResult.message.type == 1) {
					course.sections.move(position, position+1)
					drawEditor(element, course)
				}
			}).fail(function(result) {
				var apiResult = JSON.parse(result);
				toastApiResult(apiResult)
			})
		}
	})
	
	// handle move up section
	$('.up-section').click(function(event) {
		var sectionId = event.target.dataset.sectionid		
		var position = course.sections.findIndex(x => x.sectionId == sectionId)
		if (position > 0) {
			var targetId = course.sections[position-1].sectionId
			$.post( "<?= $settings['api']; ?>sections/switch",
				JSON.stringify({ sourceId: sectionId, targetId: targetId }),
				function(result) {
				var apiResult = JSON.parse(result);
				toastApiResult(apiResult)
				if (apiResult.message.type == 1) {
					course.sections.move(position, position-1)
					drawEditor(element, course)
				}
			}).fail(function(result) {
				var apiResult = JSON.parse(result);
				toastApiResult(apiResult)
			})
			
		}
	})
	
	// handle delete section
	$('.delete-section').click(function(event) {
		var sectionId = event.target.dataset.sectionid
		// todo: backend call

		var sectionId = event.target.dataset.sectionid;
		$.ajax({
			url: '<?= $settings['api']; ?>sections/' + sectionId,
			type: 'DELETE',
			success: function(resultJson) {
				var result = JSON.parse(resultJson);
				toastApiResult(result)

				// remove item from sections
				course.sections = jQuery.grep(course.sections, function(value) {
					return value.sectionId != sectionId
				})
				drawEditor(element, course)

			},
			fail: function(resultJson) {
				var result = JSON.parse(resultJson)
				toastApiResult(result)
			}
		});

		
	})

	// handle new section
	$('#addsection').click(function() {
		var sectionTitle = $('#newsection').val()
		var section = {
			title: sectionTitle
			, description: ''
			, lessons: []
			, sectionId: 0
		}
		$.post( "<?= $settings['api']; ?>courses/<?= $course->courseId; ?>/sections",
			JSON.stringify({ title: $("#newsection").val() }),
			function(result) {
			var apiResult = JSON.parse(result);
			console.log(apiResult)
			toastApiResult(apiResult)
			if (apiResult.message.type == 1) {
				// only then update ui
				section.sectionId = apiResult.object.sectionId
				course.numSections++
				course.sections.push(section)
				drawEditor(element, course)
			}
		}).fail(function(result) {
			var apiResult = JSON.parse(result);
			console.log(apiResult)
			toastApiResult(apiResult)
		})
	})

	// handle new lesson
	$('.addLesson').click(function(event) {
		var sectionId = event.target.dataset.sectionid
		var lessonTitle = $('#newlesson').val()
		var lessonTitle = $('#newlesson').val()
		var position = course.sections.findIndex(x => x.sectionId == sectionId)
		var section = course.sections[position]
		var lesson = {
			title: lessonTitle
			, description: ''
			, sectionId: sectionId
			, courseId: <?= $course->courseId; ?>
			, lessonId: 0
			, content: null
		}
		$.post( "<?= $settings['api']; ?>sections/"+sectionId+"/lessons",
			JSON.stringify({ title: lessonTitle, courseId: lesson.courseId }),
			function(result) {
			var apiResult = JSON.parse(result);
			toastApiResult(apiResult)
			if (apiResult.message.type == 1) {
				// only then update ui
				lesson.lessonId = apiResult.object.lessonId
				lesson.urls = apiResult.object.urls
				
				course.numLessons++
				section.numLessons++
				section.lessons.push(lesson)
				
				drawEditor(element, course)
			}
		}).fail(function(result) {
			toastAjaxResult(result)
		})
	})	
}


$(function() {
	
	$('#tabs a').click(function (e) {
		e.preventDefault()
		$(this).tab('show')
	})
	
	
	$.fn.editorify = function(course) {
		var editor = this
		drawEditor(editor, course)
		return this;
	}
	var course
	$.getJSON( "<?= $settings['api']; ?>courses/<?= $course->courseId; ?>", function(c) {
		course = c
		$('#editor').editorify(c)
	}).fail(function(result) {
		toastAjaxResult(result)
	})
	
	var url = '<?= $settings['api']; ?>courses/<?= $course->courseId; ?>/upload'
	
	$('#fileupload').fileupload({
        url: url,
        dataType: 'json',
        done: function (e, data) {
            $.each(data.result.files, function (index, file) {
                $('<p/>').text(file.name).appendTo('#files');
            });
			contentTable.ajax.reload()
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#progress .progress-bar').css(
                'width',
                progress + '%'
            );
        }
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
	
	
	// table with contents of this course
	var contentTable = $('#contentTable').DataTable({
		lengthChange: false,
		dom: '<"toolbar">frtip',
		ajax: "<?= $settings['api']; ?>courses/<?= $course->courseId; ?>/contents",
	    select: false,
		columns: [
			{ data: "name" },
			{ data: "type.name" }
		]
	})
	
	
	
	
	
	$('#saveSection').click(function() {
		var sectionId = $('#sectionId').val()
		var title = $("#sectionTitle").val()
		var description = $("#sectionDescription").val()
		$.post( "<?= $settings['api']; ?>sections/"+sectionId,
			JSON.stringify({ title: title, description: description }),
			function(result) {
			var apiResult = JSON.parse(result);
			console.log(apiResult)
			toastApiResult(apiResult)
			if (apiResult.message.type == 1) {
				// only then update ui
				// update model for editor
				var position = course.sections.findIndex(x => x.sectionId == sectionId)
				course.sections[position].title = title
				course.sections[position].description = description
				course.sections[position].descriptionHtml = apiResult.object.descriptionHtml
				$('#modalEditSection').modal('hide')
				drawEditor($('#editor'), course)
			}
		}).fail(function(result) {
			var apiResult = JSON.parse(result);
			console.log(apiResult)
			toastApiResult(apiResult)
		})
	})
})
</script>



<div>

	<div id="header">
		<h1><?= $course->title; ?></h1>
	
	</div>	



  <!-- Nav tabs -->
  <ul class="nav nav-tabs" role="tablist" id="tabs">
    <li role="presentation" class="active"><a href="#tabSummary" aria-controls="summary" role="tab" data-toggle="tab">Summary</a></li>
    <li role="presentation"><a href="#tabCurriculum" aria-controls="curriculum" role="tab" data-toggle="tab">Curriculum</a></li>
    <li role="presentation"><a href="#tabContent" aria-controls="content" role="tab" data-toggle="tab">Content</a></li>
  </ul>

  <!-- Tab panes -->
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="tabSummary">

	<div id="summary">
		<div><?= $course->descriptionHtml; ?></div>
	
	</div>



	</div> <!-- tabSummary -->
  
    <div role="tabpanel" class="tab-pane" id="tabCurriculum">


	<div id="editor"></div>	


	</div> <!-- tabCurriculum -->
    <div role="tabpanel" class="tab-pane" id="tabContent">
	
    <span class="btn btn-success fileinput-button">
        <i class="glyphicon glyphicon-plus"></i>
        <span>Select files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files" multiple>
    </span>
    <br>
    <br>
    <!-- The global progress bar -->
    <div id="progress" class="progress">
        <div class="progress-bar progress-bar-success"></div>
    </div>
    <!-- The container for the uploaded files -->
    <div id="files" class="files"></div>
	
	

<table id="contentTable" class="table table-bordered">
<thead>
	<tr>
	<th>Title</th>
	<th>Type</th>
	</tr>
</thead>
<tbody>
</tbody>
</table>
	
	
	</div> <!-- tabContent -->
  </div>

</div>









<!-- Modal Edit Section -->
<div class="modal" id="modalEditSection" tabindex="-1" role="dialog" aria-labelledby="editSectionLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="editSectionLabel">Edit Section</h4>
      </div>
      <div class="modal-body">

<form>
    <input type="hidden" id="sectionId">
  <div class="form-group">
    <label for="sectionTitle">Title</label>
    <input type="text" class="form-control" id="sectionTitle" placeholder="Title">
  </div>
  <div class="form-group">
    <label for="sectionDescription">Description</label>
    <input type="text" class="form-control" id="sectionDescription" placeholder="Description">
  </div>
</form>	  
	  
	  
      </div>
      <div class="modal-footer">
        <button type="button" id="saveSection" class="btn btn-primary">Save changes</button>
        <button type="button" class="btn" data-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>
